package sbnz.integracija;

import sbnz.integracija.example.facts.UserInfo;
import sbnz.integracija.example.facts.WorkoutInfo;
import sbnz.integracija.example.enums.BMICategory;
import sbnz.integracija.example.enums.WorkoutType;
import java.lang.Math;
import java.util.Random;

global Random random;

rule "User is malnourished Cardio"
    when
    	$user: UserInfo( BMI == BMICategory.MALNOURISHED )
    	$wo: WorkoutInfo( muscleGroup == WorkoutType.CARDIO)
    then
        System.out.println("----> User is malnourished and is doing Cardio training, set the exercise time and rest time accordingly");
        modify($wo) {
            setExerciseDuration(25),
            setRestBetweenExercises(35);
        }
end


rule "User is obese Cardio"
    when
    	$user: UserInfo( BMI == BMICategory.OBESE )
    	$wo: WorkoutInfo( muscleGroup == WorkoutType.CARDIO)
    then
        System.out.println("----> User is obese and is doing Cardio training, set the exercise time and rest time accordingly");
        modify($wo) {
            setExerciseDuration(30),
            setRestBetweenExercises(30);
        }
end


rule "User has normal BMI Cardio"
    when
    	$user: UserInfo( BMI == BMICategory.NORMAL )
    	$wo: WorkoutInfo( muscleGroup == WorkoutType.CARDIO)
    then
        System.out.println("----> User has Normal BMI and is doing Cardio training, set the exercise time and rest time accordingly");
        modify($wo) {
            setExerciseDuration(45),
            setRestBetweenExercises(15);
        }
end


rule "User is malnourished Strength"
    when
    	$user: UserInfo( BMI == BMICategory.MALNOURISHED )
    	$wo: WorkoutInfo( muscleGroup != WorkoutType.CARDIO)
    then
        System.out.println("----> User is malnourished and is doing Strenght training");
        modify($wo) {
            setRestBetweenSets(45),
            setRestBetweenExercises(60),
            setRepetitions(8),
            setNumberOfSets(3),
            setNumberOfExercises(4),
            setNumberOfEasyExercises(2),
            setNumberOfHardExercises(2);
        }
end

rule "User is obese Strength"
    when
    	$user: UserInfo( BMI == BMICategory.OBESE )
    	$wo: WorkoutInfo( muscleGroup != WorkoutType.CARDIO)
    then
        System.out.println("----> User is obese and is doing Strenght training");
        modify($wo) {
            setRestBetweenSets(60),
            setRestBetweenExercises(90),
            setRepetitions(20),
            setNumberOfSets(2),
            setNumberOfExercises(4),
            setNumberOfEasyExercises(2),
            setNumberOfHardExercises(2);
        }
end


rule "User has normal BMI Strength"
    when
    	$user: UserInfo( BMI == BMICategory.NORMAL )
    	$wo: WorkoutInfo( muscleGroup != WorkoutType.CARDIO)
    then
        System.out.println("----> User has Normal BMI and is doing Strenght training");
        modify($wo) {
            setRestBetweenSets(30),
            setRestBetweenExercises(90),
            setRepetitions(12),
            setNumberOfSets(3),
            setNumberOfExercises(6),
            setNumberOfEasyExercises(3),
            setNumberOfHardExercises(3);
        }
        System.out.println("odradjeno pravilo");
end